import pandas as pd
import pandas as pd

ratings = pd.read_csv("D:/MachineLearningBooks/ratings.csv")
movies= pd.read_csv('D:/MachineLearningBooks/movies.csv')

ratings.head()
userId	movieId	rating
0	1	31	2.5
1	1	1029	3.0
2	1	1061	3.0
3	1	1129	2.0
4	1	1172	4.0

s
movies.head()
movieId	title	genres
0	1	Toy Story (1995)	Adventure|Animation|Children|Comedy|Fantasy
1	2	Jumanji (1995)	Adventure|Children|Fantasy
2	3	Grumpier Old Men (1995)	Comedy|Romance
3	4	Waiting to Exhale (1995)	Comedy|Drama|Romance
4	5	Father of the Bride Part II (1995)	Comedy

ratings['userId']= 'User-' + ratings['userId'].astype(str)
ratings['movieId']= 'Movie-' + ratings['movieId'].astype(str)
​

ratings.head()
userId	movieId	rating
0	User-1	Movie-31	2.5
1	User-1	Movie-1029	3.0
2	User-1	Movie-1061	3.0
3	User-1	Movie-1129	2.0
4	User-1	Movie-1172	4.0

movies.head()
movieId	title	genres
0	1	Toy Story (1995)	Adventure|Animation|Children|Comedy|Fantasy
1	2	Jumanji (1995)	Adventure|Children|Fantasy
2	3	Grumpier Old Men (1995)	Comedy|Romance
3	4	Waiting to Exhale (1995)	Comedy|Drama|Romance
4	5	Father of the Bride Part II (1995)	Comedy

user_item_matrix= ratings.pivot_table(index='userId', columns= 'movieId', values= 'rating')

user_item_matrix
movieId	Movie-1	Movie-10	Movie-100	Movie-100017	Movie-100032	Movie-100034	Movie-100083	Movie-100106	Movie-100159	Movie-100163	...	Movie-99795	Movie-998	Movie-99811	Movie-99813	Movie-99839	Movie-99846	Movie-999	Movie-99912	Movie-99917	Movie-99992
userId																					
User-1	NaN	NaN	NaN	NaN	NaN	NaN	NaN	NaN	NaN	NaN	...	NaN	NaN	NaN	NaN	NaN	NaN	NaN	NaN	NaN	NaN
User-10	NaN	NaN	NaN	NaN	NaN	NaN	NaN	NaN	NaN	NaN	...	NaN	NaN	NaN	NaN	NaN	NaN	NaN	NaN	NaN	NaN
User-100	4.0	NaN	NaN	NaN	NaN	NaN	NaN	NaN	NaN	NaN	...	NaN	NaN	NaN	NaN	NaN	NaN	NaN	NaN	NaN	NaN
User-101	NaN	NaN	NaN	NaN	NaN	NaN	NaN	NaN	NaN	NaN	...	NaN	NaN	NaN	NaN	NaN	NaN	NaN	NaN	NaN	NaN
User-102	NaN	NaN	NaN	NaN	NaN	NaN	NaN	NaN	NaN	NaN	...	NaN	NaN	NaN	NaN	NaN	NaN	NaN	NaN	NaN	NaN
User-103	NaN	NaN	NaN	NaN	NaN	NaN	NaN	NaN	NaN	NaN	...	NaN	NaN	NaN	NaN	NaN	NaN	NaN	NaN	NaN	NaN
User-104	NaN	NaN	NaN	NaN	NaN	NaN	NaN	NaN	NaN	NaN	...	NaN	NaN	NaN	NaN	NaN	NaN	NaN	NaN	NaN	NaN
User-105	NaN	3.5	NaN	NaN	NaN	NaN	NaN	NaN	NaN	NaN	...	NaN	NaN	NaN	NaN	NaN	NaN	NaN	NaN	NaN	NaN
User-106	4.0	NaN	NaN	NaN	NaN	NaN	NaN	NaN	NaN	NaN	...	NaN	NaN	NaN	NaN	NaN	NaN	NaN	NaN	NaN	NaN
User-107	NaN	NaN	NaN	NaN	NaN	NaN	NaN	NaN	NaN	NaN	...	NaN	NaN	NaN	NaN	NaN	NaN	NaN	NaN	NaN	NaN
User-108	NaN	4.0	NaN	NaN	NaN	NaN	NaN	NaN	NaN	NaN	...	NaN	NaN	NaN	NaN	NaN	NaN	NaN	NaN	NaN	NaN
User-109	NaN	NaN	NaN	NaN	NaN	NaN	NaN	NaN	NaN	NaN	...	NaN	NaN	NaN	NaN	NaN	NaN	NaN	NaN	NaN	NaN
User-11	NaN	NaN	NaN	NaN	NaN	NaN	NaN	NaN	NaN	NaN	...	NaN	NaN	NaN	NaN	NaN	NaN	NaN	NaN	NaN	NaN
User-110	NaN	4.0	NaN	NaN	NaN	NaN	NaN	NaN	NaN	NaN	...	NaN	NaN	NaN	NaN	NaN	NaN	NaN	NaN	NaN	NaN
User-111	NaN	3.5	NaN	NaN	NaN	NaN	NaN	NaN	NaN	NaN	...	NaN	NaN	NaN	NaN	NaN	NaN	NaN	NaN	NaN	NaN
User-112	5.0	NaN	NaN	NaN	NaN	NaN	NaN	NaN	NaN	NaN	...	NaN	NaN	NaN	NaN	NaN	NaN	NaN	NaN	NaN	NaN
User-113	NaN	3.0	NaN	NaN	NaN	NaN	NaN	NaN	NaN	NaN	...	NaN	NaN	NaN	NaN	NaN	NaN	NaN	NaN	NaN	NaN
User-114	NaN	4.0	NaN	NaN	NaN	NaN	NaN	NaN	NaN	NaN	...	NaN	NaN	NaN	NaN	NaN	NaN	NaN	NaN	NaN	NaN
User-115	NaN	NaN	NaN	NaN	NaN	NaN	NaN	NaN	NaN	NaN	...	NaN	NaN	NaN	NaN	NaN	NaN	NaN	NaN	NaN	NaN
User-116	NaN	NaN	NaN	NaN	NaN	NaN	NaN	NaN	NaN	NaN	...	NaN	NaN	NaN	NaN	NaN	NaN	NaN	NaN	NaN	NaN
User-117	NaN	NaN	NaN	NaN	NaN	NaN	NaN	NaN	NaN	NaN	...	NaN	NaN	NaN	NaN	NaN	NaN	NaN	NaN	NaN	NaN
User-118	NaN	NaN	NaN	NaN	NaN	NaN	NaN	NaN	NaN	NaN	...	NaN	NaN	NaN	NaN	NaN	NaN	NaN	NaN	NaN	NaN
User-119	2.0	NaN	NaN	NaN	NaN	NaN	NaN	NaN	NaN	NaN	...	NaN	NaN	NaN	NaN	NaN	NaN	NaN	NaN	NaN	NaN
User-12	NaN	NaN	NaN	NaN	NaN	NaN	NaN	NaN	NaN	NaN	...	NaN	NaN	NaN	NaN	NaN	NaN	NaN	NaN	NaN	NaN
User-120	2.5	NaN	NaN	NaN	NaN	NaN	NaN	NaN	NaN	NaN	...	NaN	NaN	NaN	NaN	NaN	NaN	NaN	NaN	NaN	NaN
User-121	4.0	3.0	NaN	NaN	NaN	NaN	NaN	NaN	NaN	NaN	...	NaN	NaN	NaN	NaN	NaN	NaN	NaN	NaN	NaN	NaN
User-122	3.0	3.0	NaN	NaN	NaN	NaN	NaN	NaN	NaN	NaN	...	NaN	NaN	NaN	NaN	NaN	NaN	NaN	NaN	NaN	NaN
User-123	NaN	NaN	NaN	NaN	NaN	NaN	NaN	NaN	NaN	NaN	...	NaN	NaN	NaN	NaN	NaN	NaN	NaN	NaN	NaN	NaN
User-124	4.5	NaN	NaN	NaN	NaN	NaN	NaN	NaN	NaN	NaN	...	NaN	NaN	NaN	NaN	NaN	NaN	NaN	NaN	NaN	NaN
User-125	4.0	NaN	NaN	NaN	NaN	NaN	NaN	NaN	NaN	NaN	...	NaN	NaN	NaN	NaN	NaN	NaN	NaN	NaN	NaN	NaN
...	...	...	...	...	...	...	...	...	...	...	...	...	...	...	...	...	...	...	...	...	...
User-72	3.5	NaN	NaN	NaN	NaN	NaN	NaN	NaN	NaN	NaN	...	NaN	NaN	NaN	NaN	NaN	NaN	NaN	NaN	NaN	NaN
User-73	5.0	3.0	NaN	NaN	NaN	NaN	NaN	NaN	4.0	NaN	...	NaN	NaN	NaN	NaN	NaN	NaN	NaN	NaN	NaN	NaN
User-74	NaN	5.0	NaN	NaN	NaN	NaN	NaN	NaN	NaN	NaN	...	NaN	NaN	NaN	NaN	NaN	NaN	NaN	NaN	NaN	NaN
User-75	3.0	NaN	NaN	NaN	NaN	NaN	NaN	NaN	NaN	NaN	...	NaN	NaN	NaN	NaN	NaN	NaN	NaN	NaN	NaN	NaN
User-76	NaN	NaN	NaN	NaN	NaN	NaN	NaN	NaN	NaN	NaN	...	NaN	NaN	NaN	NaN	NaN	NaN	NaN	NaN	NaN	NaN
User-77	4.0	3.0	NaN	NaN	NaN	NaN	NaN	NaN	NaN	NaN	...	NaN	NaN	NaN	NaN	NaN	NaN	NaN	NaN	NaN	NaN
User-78	NaN	5.0	NaN	NaN	NaN	NaN	NaN	NaN	NaN	NaN	...	NaN	NaN	NaN	NaN	NaN	NaN	NaN	NaN	NaN	NaN
User-79	2.0	NaN	NaN	NaN	NaN	NaN	NaN	NaN	NaN	NaN	...	NaN	NaN	NaN	NaN	NaN	NaN	NaN	NaN	NaN	NaN
User-8	NaN	NaN	NaN	NaN	NaN	NaN	NaN	NaN	NaN	NaN	...	NaN	NaN	NaN	NaN	NaN	NaN	NaN	NaN	NaN	NaN
User-80	NaN	3.0	2.0	NaN	NaN	NaN	NaN	NaN	NaN	NaN	...	NaN	NaN	NaN	NaN	NaN	NaN	NaN	NaN	NaN	NaN
User-81	NaN	NaN	NaN	NaN	NaN	NaN	NaN	NaN	NaN	NaN	...	NaN	NaN	NaN	NaN	NaN	NaN	NaN	NaN	NaN	NaN
User-82	NaN	3.0	NaN	NaN	NaN	NaN	NaN	NaN	NaN	NaN	...	NaN	NaN	NaN	NaN	NaN	NaN	NaN	NaN	NaN	NaN
User-83	NaN	NaN	NaN	NaN	NaN	NaN	NaN	NaN	NaN	NaN	...	NaN	NaN	NaN	NaN	NaN	NaN	NaN	NaN	NaN	NaN
User-84	3.5	NaN	NaN	NaN	NaN	NaN	NaN	NaN	NaN	NaN	...	NaN	NaN	NaN	NaN	NaN	NaN	NaN	NaN	NaN	NaN
User-85	NaN	5.0	NaN	NaN	NaN	NaN	NaN	NaN	NaN	NaN	...	NaN	NaN	NaN	NaN	NaN	NaN	NaN	NaN	NaN	NaN
User-86	3.0	NaN	NaN	NaN	NaN	NaN	NaN	NaN	NaN	NaN	...	NaN	NaN	NaN	NaN	NaN	NaN	NaN	NaN	NaN	NaN
User-87	3.0	NaN	NaN	NaN	NaN	NaN	NaN	NaN	NaN	NaN	...	NaN	NaN	NaN	NaN	NaN	NaN	NaN	NaN	NaN	NaN
User-88	NaN	NaN	NaN	NaN	NaN	NaN	NaN	NaN	NaN	NaN	...	NaN	NaN	NaN	NaN	NaN	NaN	NaN	NaN	NaN	NaN
User-89	5.0	NaN	NaN	NaN	NaN	NaN	NaN	NaN	NaN	NaN	...	NaN	NaN	NaN	NaN	NaN	NaN	NaN	NaN	NaN	NaN
User-9	4.0	NaN	NaN	NaN	NaN	NaN	NaN	NaN	NaN	NaN	...	NaN	NaN	NaN	NaN	NaN	NaN	NaN	NaN	NaN	NaN
User-90	4.0	NaN	NaN	NaN	NaN	NaN	NaN	NaN	NaN	NaN	...	NaN	NaN	NaN	NaN	NaN	NaN	NaN	NaN	NaN	NaN
User-91	5.0	NaN	NaN	NaN	NaN	NaN	NaN	NaN	NaN	NaN	...	NaN	NaN	NaN	NaN	NaN	NaN	NaN	NaN	NaN	NaN
User-92	5.0	2.0	NaN	NaN	NaN	NaN	NaN	NaN	NaN	NaN	...	NaN	NaN	NaN	NaN	NaN	NaN	NaN	NaN	NaN	NaN
User-93	4.0	NaN	NaN	NaN	NaN	NaN	NaN	NaN	NaN	NaN	...	NaN	NaN	NaN	NaN	NaN	NaN	NaN	NaN	NaN	NaN
User-94	4.0	NaN	NaN	NaN	NaN	NaN	NaN	NaN	NaN	NaN	...	NaN	NaN	NaN	NaN	NaN	NaN	NaN	NaN	NaN	NaN
User-95	NaN	NaN	NaN	NaN	NaN	NaN	NaN	NaN	NaN	NaN	...	NaN	NaN	NaN	NaN	NaN	NaN	4.0	NaN	NaN	NaN
User-96	NaN	NaN	NaN	NaN	NaN	NaN	NaN	NaN	NaN	NaN	...	NaN	NaN	NaN	NaN	NaN	NaN	NaN	NaN	NaN	NaN
User-97	1.0	NaN	NaN	NaN	NaN	NaN	NaN	NaN	NaN	NaN	...	NaN	NaN	NaN	NaN	NaN	NaN	NaN	NaN	NaN	NaN
User-98	NaN	NaN	NaN	NaN	NaN	NaN	NaN	NaN	NaN	NaN	...	NaN	NaN	NaN	NaN	NaN	NaN	NaN	NaN	NaN	NaN
User-99	4.0	NaN	NaN	NaN	NaN	NaN	NaN	NaN	NaN	NaN	...	NaN	NaN	NaN	NaN	NaN	NaN	NaN	NaN	NaN	NaN
671 rows × 9066 columns


#Average number of ratings per user
​
user_item_matrix.apply(lambda v: len(v) - pd.isnull(v).sum(), axis=1).head()
userId
User-1       20
User-10      46
User-100     25
User-101     55
User-102    678
dtype: int64

#axis =1 is uesd for all rows, user with most number of rating
print(user_item_matrix.count(axis=1).sort_values(ascending= False).head(1))
userId
User-547    2391
dtype: int64

#Average number of ratings per user 
print(user_item_matrix.count(axis=1).mean())
149.03725782414307

# Average number of ratings per movie
print(user_item_matrix.count().mean())
11.030664019413193

#Movie with most number of ratings(most discussed movies)
user_item_matrix.count().sort_values(ascending= False).head()
movieId
Movie-356    341
Movie-296    324
Movie-318    311
Movie-593    304
Movie-260    291
dtype: int64

from  sklearn.metrics.pairwise import cosine_similarity
​

#ui_matrix= user_item_matrix.copy()
​
#substracting each value by its mean and filling 0 values in place of na.
ui_matrix= user_item_matrix.apply(lambda v: v- v.mean(), axis=1).fillna(0)
​
ui_matrix.head()
movieId	Movie-1	Movie-10	Movie-100	Movie-100017	Movie-100032	Movie-100034	Movie-100083	Movie-100106	Movie-100159	Movie-100163	...	Movie-99795	Movie-998	Movie-99811	Movie-99813	Movie-99839	Movie-99846	Movie-999	Movie-99912	Movie-99917	Movie-99992
userId																					
User-1	0.0	0.0	0.0	0.0	0.0	0.0	0.0	0.0	0.0	0.0	...	0.0	0.0	0.0	0.0	0.0	0.0	0.0	0.0	0.0	0.0
User-10	0.0	0.0	0.0	0.0	0.0	0.0	0.0	0.0	0.0	0.0	...	0.0	0.0	0.0	0.0	0.0	0.0	0.0	0.0	0.0	0.0
User-100	0.6	0.0	0.0	0.0	0.0	0.0	0.0	0.0	0.0	0.0	...	0.0	0.0	0.0	0.0	0.0	0.0	0.0	0.0	0.0	0.0
User-101	0.0	0.0	0.0	0.0	0.0	0.0	0.0	0.0	0.0	0.0	...	0.0	0.0	0.0	0.0	0.0	0.0	0.0	0.0	0.0	0.0
User-102	0.0	0.0	0.0	0.0	0.0	0.0	0.0	0.0	0.0	0.0	...	0.0	0.0	0.0	0.0	0.0	0.0	0.0	0.0	0.0	0.0
5 rows × 9066 columns


#here cosine similarity is done to find the similarity betweeen all the users giving ratings to all the movies
sim_matrix= pd.DataFrame(cosine_similarity(ui_matrix),
            index= ui_matrix.index,
            columns= ui_matrix.index)

#here we are droping User-100 because we are finding cosine similarity for User-100
neighs_user100= sim_matrix['User-100'].drop('User-100').sort_values(ascending= False).head(7).index

#so the output of this will show the name of users who rated the movies similar as the given user
neighs_user100
Index(['User-636', 'User-459', 'User-25', 'User-112', 'User-18', 'User-70',
       'User-357'],
      dtype='object', name='userId')

preds= pd.DataFrame(columns= ['mid', 'predicted_rating'])
for mid, rating in user_item_matrix.loc['User-100'].items():
    #if step is to check if  have rated the movie or not
    if pd.isnull(rating):
        #first arg is for neighbours and 2nd arg is for the mid rating
        mid_ratings= user_item_matrix.loc[neighs_user100, mid]
        avg_mid_rating= mid_ratings.mean()
        preds= preds.append({'mid': mid,
                            'predicted_rating': avg_mid_rating},
                           ignore_index= True)
        #print(mid, mid_ratings.values, avg_mid_rating)
preds.sort_values('predicted_rating', ascending= False).head()
mid	predicted_rating
6186	Movie-595	5.0
6316	Movie-609	5.0
6363	Movie-613	5.0
2462	Movie-265	5.0
3512	Movie-342	5.0

preds['movieId']= preds['mid'].str.replace('Movie-', '').astype(int)
preds= pd.merge(preds, movies, left_on= 'movieId', right_on= 'movieId')
preds.sort_values('predicted_rating', ascending= False).head(3)['title']
​
6186                        Beauty and the Beast (1991)
6316    Homeward Bound II: Lost in San Francisco (1996)
6363                                   Jane Eyre (1996)
Name: title, dtype: object

def ubcf(userid):
    preds= pd.DataFrame(columns= ['mid', 'predicted_rating'])
    neighs_user= sim_matrix[userid].drop(userid).sort_values(ascending= False).head(7).index
    for mid, rating in user_item_matrix.loc[userid].items():
    #if step is to check if user have rated the movie or not
        if pd.isnull(rating):
        #first arg is for neighbours and 2nd arg is for the mid rating
            mid_ratings= user_item_matrix.loc[neighs_user, mid]
            avg_mid_rating= mid_ratings.mean()
            preds= preds.append({'mid': mid,
                            'predicted_rating': avg_mid_rating},
                           ignore_index= True)
        #print(mid, mid_ratings.values, avg_mid_rating)
        #preds.sort_values('predicted_rating', ascending=
    preds['movieId']= preds['mid'].str.replace('Movie-', '').astype(int)
    preds= pd.merge(preds, movies, left_on= 'movieId', right_on= 'movieId')
    movies_recom= preds.sort_values('predicted_rating', ascending= False).head(3)['title']
    return movies_recom

ubcf('User-2')
2805    American Beauty (1999)
1306            Contact (1997)
1448            Titanic (1997)
Name: title, dtype: object

​
